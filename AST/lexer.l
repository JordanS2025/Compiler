%{
#include "parser.tab.h"  // Include the header generated by Bison
#include <string.h>
#include <stdio.h>

int line_num = 1;  // Definition and initialization of line_num
%}

%%

[ \t\r]+           ; // Skip whitespace
\n                 { line_num++; }

"int"              { 
                      printf("TOKEN: %-10s | %s\n", "TYPE_INT", yytext); 
                      return TYPE_INT; 
                  }

"char"             { 
                      printf("TOKEN: %-10s | %s\n", "TYPE_CHAR", yytext); 
                      return TYPE_CHAR; 
                  }

"="                { 
                      printf("TOKEN: %-10s | %s\n", "ASSIGNOP", yytext); 
                      return ASSIGNOP; 
                  }

"+"                { 
                      printf("TOKEN: %-10s | %s\n", "OP_ADD", yytext); 
                      return OP_ADD; 
                  }

";"                { 
                      printf("TOKEN: %-10s | %s\n", "SEMICOLON", yytext); 
                      return SEMICOLON; 
                  }

"write"            { 
                      printf("TOKEN: %-10s | %s\n", "WRITE", yytext); 
                      return WRITE; 
                  }

[0-9]+             { 
                      printf("TOKEN: %-10s | %s\n", "NUMBER", yytext); 
                      yylval.number = atoi(yytext); 
                      return NUMBER; 
                  }

[a-zA-Z_][a-zA-Z0-9_]* { 
                      printf("TOKEN: %-10s | %s\n", "ID", yytext); 
                      yylval.string = strdup(yytext); 
                      return ID; 
                  }

.                  { 
                      printf("Unrecognized character: %s at line %d\n", yytext, line_num); 
                      /* You can choose to handle errors here or skip them */ 
                  }

%%

int yywrap() {
    return 1;
}

